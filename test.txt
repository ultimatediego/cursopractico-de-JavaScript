/////////////////////Variables y operaciones/////////////////////

1Ô∏è‚É£ Responde las siguientes preguntas en la secci√≥n de comentarios:
¬øQu√© es una variable y para qu√© sirve?
Una variable es la asignacion de un espacio de memoria 

¬øCu√°l es la diferencia entre declarar e inicializar una variable?
declarar es nada mas definirla, ejemplo: let fruit = ; mientras que inicializarla es fruits = "Apple"; 

¬øCu√°l es la diferencia entre sumar n√∫meros y concatenar strings?
la diferencia es que cuando sumamos dos variables del tipo numeros, se suman ambos como en una suma natural, 
mientras que cuadno suamos strings estos se concatenan

¬øCu√°l operador me permite sumar o concatenar?
el operado suma +

2Ô∏è‚É£ Determina el nombre y tipo de dato para almacenar en variables la siguiente informaci√≥n:
Nombre; let nombre = string
Apellido; let apellido = string
Nombre de usuario en Platzi; const usuario = string
Edad; let edad = number
Correo electr√≥nico; const correo = string
Mayor de edad; let esMayor = bolean 
Dinero ahorrado; function dineroAhorrado = object
Deudas; function deudas = object

3Ô∏è‚É£ Traduce a c√≥digo JavaScript las variables del ejemplo anterior y deja tu c√≥digo en los comentarios.
let nombre = string;
let apellido = string;
const usuario = string;
let edad = number;
const correo = string;
let esMayor = bolean;
let dineroAhorrado = number;
let deudas = number;

4Ô∏è‚É£ Calcula e imprime las siguientes variables a partir de las variables del ejemplo anterior:
Nombre completo (nombre y apellido)
let nombreCompleto = nombre + apellido;
console.lo(nombre_completo);

Dinero real (dinero ahorrado menos deudas)
let dineroReal = dineroAhorrado - deudas;
console.log(dineroReal);

////////////////////Funciones//////////////////////////


1Ô∏è‚É£ Responde las siguientes preguntas en la secci√≥n de comentarios:
¬øQu√© es una funci√≥n?
Una funciones una variable de tipo object que nos ayuda a desarrollar algoritmos que llevas 
mas logica asi como tambien acciones para tareas especificas.

¬øCu√°ndo me sirve usar una funci√≥n en mi c√≥digo?
cuando por ejemplo quiero saludar un listado de nombres de alumnos, puedo crear una funcion 
que los salude a todos pasandole como parametro la lista de strings.

¬øCu√°l es la diferencia entre par√°metros y argumentos de una funci√≥n?
los parametros son lo que tendra para trabajar la funcion y los argumentos
sera los datos que le pasemos a la funcion

2Ô∏è‚É£ Convierte el siguiente c√≥digo en una funci√≥n, pero, cambiando cuando 
sea necesario las variables constantes por par√°metros y argumentos en una funci√≥n:
const name = "Juan David";
const lastname = "Castro Gallego";
const completeName = name + lastname;
const nickname = "juandc";

console.log("Mi nombre es " + completeName + ", pero prefiero que me digas " + nickname + ".");

funcion greeting(name,lastname,nickname) {
    completeName = name + lastname;
    console.log(`Mi nombre es +{completeName}`+`pero prefiero que me digas ${nickname}`;)
}

///////////////////////////Condicionales////////////////////////////////


1Ô∏è‚É£ Responde las siguientes preguntas en la secci√≥n de comentarios:
¬øQu√© es un condicional?
es una forma de expresar la logica de un algoritmo que debe tomar distintos caminos en funcion de lo que se requiera.

¬øQu√© tipos de condicionales existen en JavaScript y cu√°les son sus diferencias?
if, if else, if else if, else, while, swicht.

¬øPuedo combinar funciones y condicionales?
si se puede, ya sea colocando condicionales adentro de funciones o funciones adentro de condicionales.

2Ô∏è‚É£ Replica el comportamiento del siguiente c√≥digo que usa la sentencia switch utilizando if, else y else if:

const tipoDeSuscripcion = "Basic";

switch (tipoDeSuscripcion) {
   case "Free":
       console.log("Solo puedes tomar los cursos gratis");
       break;
   case "Basic":
       console.log("Puedes tomar casi todos los cursos de Platzi durante un mes");
       break;
   case "Expert":
       console.log("Puedes tomar casi todos los cursos de Platzi durante un a√±o");
       break;
   case "ExpertPlus":
       console.log("T√∫ y alguien m√°s pueden tomar TODOS los cursos de Platzi durante un a√±o");
       break;
}

Solucion:

if (tipoDeSuscripcion == "Free") {
    console.log("Solo puedes tomar los cursos gratis");
} else if (tipoDeSuscripcion == "Basic") {
    console.log("Puedes tomar casi todos los cursos de Platzi durante un mes");
} else if (tipoDeSuscripcion == "Expert") {
    console.log("Puedes tomar casi todos los cursos de Platzi durante un a√±o");
} else (tipoDeSuscripcion == "ExpertPlus") {
    console.log("T√∫ y alguien m√°s pueden tomar TODOS los cursos de Platzi durante un a√±o");
}

/////////////////////////Ciclos/////////////////////////////////
1Ô∏è‚É£ Responde las siguientes preguntas en la secci√≥n de comentarios:
¬øQu√© es un ciclo?
Es un bucle que nos sirve para cuando un algoritmo necesita estar haciendo o repitiendo cierta logica determinada.

¬øQu√© tipos de ciclos existen en JavaScript?
for, while

¬øQu√© es un ciclo infinito y por qu√© es un problema?
Es cuando fallamos en la logica del bucle y nunca sale de este, es un problema pues esta consumiendo 
recursos de la computadora e incluso si no se detecta podria colapsar la memoria ram de la computadora donde se ejecute

¬øPuedo mezclar ciclos y condicionales?
si se puede, ejemplo podriamos hacer un ciclo for y adentro hacer un ciclo while.

2Ô∏è‚É£ Replica el comportamiento de los siguientes ciclos for utilizando ciclos while:
for (let i = 0; i < 5; i++) {
    console.log("El valor de i es: " + i);
}
let i=0
while (i<5){
    console.log("El valor de i es: " + i);
    i++
}

for (let i = 10; i >= 2; i--) {
    console.log("El valor de i es: " + i);
}

let i=10
while (i>=2){
    console.log("El valor de i es: " + i);
    i--
}


3Ô∏è‚É£ Escribe un c√≥digo en JavaScript que le pregunte a los usuarios cu√°nto es 2 + 2. Si responden bien, mostramos un mensaje de felicitaciones, pero si responden mal, volvemos a empezar.
üí° Pista: puedes usar la funci√≥n prompt de JavaScript.


let a = prompt("Cuanto es 2 + 2 ?");
function cuantoEs(answer){
    while (answer !=4 ){
        answer=prompt("Cuanto es 2 + 2 ?")
    }
    if (answer==4){
        console.log("felicitaciones")
    } 
}

//////////////////////Listas////////////////////////////

1Ô∏è‚É£ Responde las siguientes preguntas en la secci√≥n de comentarios:

¬øQu√© es un array?
es una variable de tipo objeto a la cual le podemos aplicar metodos incluso si esta esta definida con la palabra clave const

¬øQu√© es un objeto?
es un tipo de variable especial pues sirve para archivas otro tipos de variables adentro tambien funciona 
para crear objetos reutilizables en el sentido de programacion orientado a objetos

¬øCu√°ndo es mejor usar objetos o arrays?
cuando hay listas o diconarios, es decir cuando tengamos multiples atributos dentro de una varibale, digase un auto 
que tiene distintos atributos como sus llantas, motor,chasis,carroceria, etc.

¬øPuedo mezclar arrays con objetos o incluso objetos con arrays?
si ambos, podemos guardar listas en objetos y tambien objetos en listas

2Ô∏è‚É£ Crea una funci√≥n que pueda recibir cualquier array como par√°metro e imprima su primer elemento.

let a =[1,2,3,4,5]
function imprimir(array){
    element = array.shift();
    console.log(element)
}
imprimir(a);

3Ô∏è‚É£ Crea una funci√≥n que pueda recibir cualquier array como par√°metro e imprima todos sus elementos uno por uno (no se vale imprimir el array completo).

let a =[1,2,3,4,5]
function imprimir(array){
    let i = 0
    while(i < array.length){
        element = array.shift();
        console.log(element);
    }
}
imprimir(a);

4Ô∏è‚É£ Crea una funci√≥n que pueda recibir cualquier objeto como par√°metro e imprima todos sus elementos uno por uno (no se vale imprimir el objeto completo).

let a ={ 0: 'a', 1: 'b', 2: 'c' };
let b =Object.values(a);
function imprimir(array){
    let i = 0
    while(i < array.length){
        element = array.shift();
        console.log(element);
    }
}
imprimir(b);